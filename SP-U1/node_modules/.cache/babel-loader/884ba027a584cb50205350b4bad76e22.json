{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nvar supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\n\nfunction canConstructReadableStream() {\n  if (supportStatus === undefined) {\n    // See https://github.com/GoogleChrome/workbox/issues/1473\n    try {\n      new ReadableStream({\n        start: function start() {}\n      });\n      supportStatus = true;\n    } catch (error) {\n      supportStatus = false;\n    }\n  }\n\n  return supportStatus;\n}\n\nexport { canConstructReadableStream };","map":{"version":3,"sources":["/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/workbox-core/_private/canConstructReadableStream.js"],"names":["supportStatus","canConstructReadableStream","undefined","ReadableStream","start","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,IAAIA,aAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,0BAAT,GAAsC;AAClC,MAAID,aAAa,KAAKE,SAAtB,EAAiC;AAC7B;AACA,QAAI;AACA,UAAIC,cAAJ,CAAmB;AAAEC,QAAAA,KAAF,mBAAU,CAAG;AAAb,OAAnB;AACAJ,MAAAA,aAAa,GAAG,IAAhB;AACH,KAHD,CAIA,OAAOK,KAAP,EAAc;AACVL,MAAAA,aAAa,GAAG,KAAhB;AACH;AACJ;;AACD,SAAOA,aAAP;AACH;;AACD,SAASC,0BAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\nfunction canConstructReadableStream() {\n    if (supportStatus === undefined) {\n        // See https://github.com/GoogleChrome/workbox/issues/1473\n        try {\n            new ReadableStream({ start() { } });\n            supportStatus = true;\n        }\n        catch (error) {\n            supportStatus = false;\n        }\n    }\n    return supportStatus;\n}\nexport { canConstructReadableStream };\n"]},"metadata":{},"sourceType":"module"}