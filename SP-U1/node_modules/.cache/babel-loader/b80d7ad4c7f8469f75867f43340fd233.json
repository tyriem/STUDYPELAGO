{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\n\nfunction executeQuotaErrorCallbacks() {\n  return _executeQuotaErrorCallbacks.apply(this, arguments);\n}\n\nfunction _executeQuotaErrorCallbacks() {\n  _executeQuotaErrorCallbacks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _iterator, _step, callback;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log(\"About to run \".concat(quotaErrorCallbacks.size, \" \") + \"callbacks to clean up caches.\");\n            }\n\n            _iterator = _createForOfIteratorHelper(quotaErrorCallbacks);\n            _context.prev = 2;\n\n            _iterator.s();\n\n          case 4:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 11;\n              break;\n            }\n\n            callback = _step.value;\n            _context.next = 8;\n            return callback();\n\n          case 8:\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log(callback, 'is complete.');\n            }\n\n          case 9:\n            _context.next = 4;\n            break;\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n\n            _iterator.e(_context.t0);\n\n          case 16:\n            _context.prev = 16;\n\n            _iterator.f();\n\n            return _context.finish(16);\n\n          case 19:\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log('Finished running callbacks.');\n            }\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13, 16, 19]]);\n  }));\n  return _executeQuotaErrorCallbacks.apply(this, arguments);\n}\n\nexport { executeQuotaErrorCallbacks };","map":{"version":3,"sources":["/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js"],"names":["logger","quotaErrorCallbacks","executeQuotaErrorCallbacks","process","env","NODE_ENV","log","size","callback"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;SACeC,0B;;;;;yFAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACI,gBAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCL,cAAAA,MAAM,CAACM,GAAP,CAAW,uBAAgBL,mBAAmB,CAACM,IAApC,wCAAX;AAEH;;AAJL,mDAK2BN,mBAL3B;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKeO,YAAAA,QALf;AAAA;AAAA,mBAMcA,QAAQ,EANtB;;AAAA;AAOQ,gBAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCL,cAAAA,MAAM,CAACM,GAAP,CAAWE,QAAX,EAAqB,cAArB;AACH;;AATT;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAWI,gBAAIL,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCL,cAAAA,MAAM,CAACM,GAAP,CAAW,6BAAX;AACH;;AAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,SAASJ,0BAAT","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n"]},"metadata":{},"sourceType":"module"}