{"ast":null,"code":"var getTimeGivenProgression = function (t, r, a, e, o) {\n  return solveCubicBezier(t[1], r[1], a[1], e[1], o).map(function (o) {\n    return solveCubicParametricEquation(t[0], r[0], a[0], e[0], o);\n  });\n};\n\nvar solveCubicParametricEquation = function (t, r, a, e, o) {\n  var i = 3 * r * Math.pow(o - 1, 2);\n  var n = -3 * a * o + 3 * a + e * o;\n  var u = t * Math.pow(o - 1, 3);\n  return o * (i + o * n) - u;\n};\n\nvar solveCubicBezier = function (t, r, a, e, o) {\n  t -= o;\n  r -= o;\n  a -= o;\n  e -= o;\n  var i = solveCubicEquation(e - 3 * a + 3 * r - t, 3 * a - 6 * r + 3 * t, 3 * r - 3 * t, t);\n  return i.filter(function (t) {\n    return t >= 0 && t <= 1;\n  });\n};\n\nvar solveQuadraticEquation = function (t, r, a) {\n  var e = r * r - 4 * t * a;\n\n  if (e < 0) {\n    return [];\n  } else {\n    return [(-r + Math.sqrt(e)) / (2 * t), (-r - Math.sqrt(e)) / (2 * t)];\n  }\n};\n\nvar solveCubicEquation = function (t, r, a, e) {\n  if (t === 0) {\n    return solveQuadraticEquation(r, a, e);\n  }\n\n  r /= t;\n  a /= t;\n  e /= t;\n  var o = (3 * a - r * r) / 3;\n  var i = (2 * r * r * r - 9 * r * a + 27 * e) / 27;\n\n  if (o === 0) {\n    return [Math.pow(-i, 1 / 3)];\n  } else if (i === 0) {\n    return [Math.sqrt(-o), -Math.sqrt(-o)];\n  }\n\n  var n = Math.pow(i / 2, 2) + Math.pow(o / 3, 3);\n\n  if (n === 0) {\n    return [Math.pow(i / 2, 1 / 2) - r / 3];\n  } else if (n > 0) {\n    return [Math.pow(-(i / 2) + Math.sqrt(n), 1 / 3) - Math.pow(i / 2 + Math.sqrt(n), 1 / 3) - r / 3];\n  }\n\n  var u = Math.sqrt(Math.pow(-(o / 3), 3));\n  var s = Math.acos(-(i / (2 * Math.sqrt(Math.pow(-(o / 3), 3)))));\n  var v = 2 * Math.pow(u, 1 / 3);\n  return [v * Math.cos(s / 3) - r / 3, v * Math.cos((s + 2 * Math.PI) / 3) - r / 3, v * Math.cos((s + 4 * Math.PI) / 3) - r / 3];\n};\n\nexport { getTimeGivenProgression as g };","map":{"version":3,"sources":["/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/@ionic/core/dist/esm-es5/cubic-bezier-eea9a7a9.js"],"names":["getTimeGivenProgression","t","r","a","e","o","solveCubicBezier","map","solveCubicParametricEquation","i","Math","pow","n","u","solveCubicEquation","filter","solveQuadraticEquation","sqrt","s","acos","v","cos","PI","g"],"mappings":"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","sourcesContent":["var getTimeGivenProgression=function(t,r,a,e,o){return solveCubicBezier(t[1],r[1],a[1],e[1],o).map((function(o){return solveCubicParametricEquation(t[0],r[0],a[0],e[0],o)}))};var solveCubicParametricEquation=function(t,r,a,e,o){var i=3*r*Math.pow(o-1,2);var n=-3*a*o+3*a+e*o;var u=t*Math.pow(o-1,3);return o*(i+o*n)-u};var solveCubicBezier=function(t,r,a,e,o){t-=o;r-=o;a-=o;e-=o;var i=solveCubicEquation(e-3*a+3*r-t,3*a-6*r+3*t,3*r-3*t,t);return i.filter((function(t){return t>=0&&t<=1}))};var solveQuadraticEquation=function(t,r,a){var e=r*r-4*t*a;if(e<0){return[]}else{return[(-r+Math.sqrt(e))/(2*t),(-r-Math.sqrt(e))/(2*t)]}};var solveCubicEquation=function(t,r,a,e){if(t===0){return solveQuadraticEquation(r,a,e)}r/=t;a/=t;e/=t;var o=(3*a-r*r)/3;var i=(2*r*r*r-9*r*a+27*e)/27;if(o===0){return[Math.pow(-i,1/3)]}else if(i===0){return[Math.sqrt(-o),-Math.sqrt(-o)]}var n=Math.pow(i/2,2)+Math.pow(o/3,3);if(n===0){return[Math.pow(i/2,1/2)-r/3]}else if(n>0){return[Math.pow(-(i/2)+Math.sqrt(n),1/3)-Math.pow(i/2+Math.sqrt(n),1/3)-r/3]}var u=Math.sqrt(Math.pow(-(o/3),3));var s=Math.acos(-(i/(2*Math.sqrt(Math.pow(-(o/3),3)))));var v=2*Math.pow(u,1/3);return[v*Math.cos(s/3)-r/3,v*Math.cos((s+2*Math.PI)/3)-r/3,v*Math.cos((s+4*Math.PI)/3)-r/3]};export{getTimeGivenProgression as g};"]},"metadata":{},"sourceType":"module"}