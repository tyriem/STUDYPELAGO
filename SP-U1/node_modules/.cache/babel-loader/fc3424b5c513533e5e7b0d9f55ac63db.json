{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nvar supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\n\nfunction canConstructResponseFromBodyStream() {\n  if (supportStatus === undefined) {\n    var testResponse = new Response('');\n\n    if ('body' in testResponse) {\n      try {\n        new Response(testResponse.body);\n        supportStatus = true;\n      } catch (error) {\n        supportStatus = false;\n      }\n    }\n\n    supportStatus = false;\n  }\n\n  return supportStatus;\n}\n\nexport { canConstructResponseFromBodyStream };","map":{"version":3,"sources":["/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js"],"names":["supportStatus","canConstructResponseFromBodyStream","undefined","testResponse","Response","body","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,IAAIA,aAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kCAAT,GAA8C;AAC1C,MAAID,aAAa,KAAKE,SAAtB,EAAiC;AAC7B,QAAMC,YAAY,GAAG,IAAIC,QAAJ,CAAa,EAAb,CAArB;;AACA,QAAI,UAAUD,YAAd,EAA4B;AACxB,UAAI;AACA,YAAIC,QAAJ,CAAaD,YAAY,CAACE,IAA1B;AACAL,QAAAA,aAAa,GAAG,IAAhB;AACH,OAHD,CAIA,OAAOM,KAAP,EAAc;AACVN,QAAAA,aAAa,GAAG,KAAhB;AACH;AACJ;;AACDA,IAAAA,aAAa,GAAG,KAAhB;AACH;;AACD,SAAOA,aAAP;AACH;;AACD,SAASC,kCAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n"]},"metadata":{},"sourceType":"module"}