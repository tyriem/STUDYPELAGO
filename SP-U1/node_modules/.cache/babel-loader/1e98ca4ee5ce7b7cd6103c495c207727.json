{"ast":null,"code":"import _toConsumableArray from \"/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nvar logger = process.env.NODE_ENV === 'production' ? null : function () {\n  // Don't overwrite this value if it's already set.\n  // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n  if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n    self.__WB_DISABLE_DEV_LOGS = false;\n  }\n\n  var inGroup = false;\n  var methodToColorMap = {\n    debug: \"#7f8c8d\",\n    log: \"#2ecc71\",\n    warn: \"#f39c12\",\n    error: \"#c0392b\",\n    groupCollapsed: \"#3498db\",\n    groupEnd: null\n  };\n\n  var print = function print(method, args) {\n    var _console2;\n\n    if (self.__WB_DISABLE_DEV_LOGS) {\n      return;\n    }\n\n    if (method === 'groupCollapsed') {\n      // Safari doesn't print all console.groupCollapsed() arguments:\n      // https://bugs.webkit.org/show_bug.cgi?id=182754\n      if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n        var _console;\n\n        (_console = console)[method].apply(_console, _toConsumableArray(args));\n\n        return;\n      }\n    }\n\n    var styles = [\"background: \".concat(methodToColorMap[method]), \"border-radius: 0.5em\", \"color: white\", \"font-weight: bold\", \"padding: 2px 0.5em\"]; // When in a group, the workbox prefix is not displayed.\n\n    var logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n\n    (_console2 = console)[method].apply(_console2, logPrefix.concat(_toConsumableArray(args)));\n\n    if (method === 'groupCollapsed') {\n      inGroup = true;\n    }\n\n    if (method === 'groupEnd') {\n      inGroup = false;\n    }\n  };\n\n  var api = {};\n  var loggerMethods = Object.keys(methodToColorMap);\n\n  var _loop = function _loop() {\n    var key = _loggerMethods[_i];\n    var method = key;\n\n    api[method] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      print(method, args);\n    };\n  };\n\n  for (var _i = 0, _loggerMethods = loggerMethods; _i < _loggerMethods.length; _i++) {\n    _loop();\n  }\n\n  return api;\n}();\nexport { logger };","map":{"version":3,"sources":["/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/workbox-core/_private/logger.js"],"names":["logger","process","env","NODE_ENV","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,IAAMA,MAAM,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,IAAxC,GAAgD,YAAM;AAClE;AACA;AACA,MAAI,EAAE,2BAA2BC,IAA7B,CAAJ,EAAwC;AACpCA,IAAAA,IAAI,CAACC,qBAAL,GAA6B,KAA7B;AACH;;AACD,MAAIC,OAAO,GAAG,KAAd;AACA,MAAMC,gBAAgB,GAAG;AACrBC,IAAAA,KAAK,WADgB;AAErBC,IAAAA,GAAG,WAFkB;AAGrBC,IAAAA,IAAI,WAHiB;AAIrBC,IAAAA,KAAK,WAJgB;AAKrBC,IAAAA,cAAc,WALO;AAMrBC,IAAAA,QAAQ,EAAE;AANW,GAAzB;;AAQA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAAA;;AAClC,QAAIZ,IAAI,CAACC,qBAAT,EAAgC;AAC5B;AACH;;AACD,QAAIU,MAAM,KAAK,gBAAf,EAAiC;AAC7B;AACA;AACA,UAAI,iCAAiCE,IAAjC,CAAsCC,SAAS,CAACC,SAAhD,CAAJ,EAAgE;AAAA;;AAC5D,oBAAAC,OAAO,EAACL,MAAD,CAAP,oCAAmBC,IAAnB;;AACA;AACH;AACJ;;AACD,QAAMK,MAAM,GAAG,uBACId,gBAAgB,CAACQ,MAAD,CADpB,qFAAf,CAZkC,CAmBlC;;AACA,QAAMO,SAAS,GAAGhB,OAAO,GAAG,EAAH,GAAQ,CAAC,WAAD,EAAce,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAd,CAAjC;;AACA,iBAAAH,OAAO,EAACL,MAAD,CAAP,kBAAmBO,SAAnB,2BAAiCN,IAAjC;;AACA,QAAID,MAAM,KAAK,gBAAf,EAAiC;AAC7BT,MAAAA,OAAO,GAAG,IAAV;AACH;;AACD,QAAIS,MAAM,KAAK,UAAf,EAA2B;AACvBT,MAAAA,OAAO,GAAG,KAAV;AACH;AACJ,GA5BD;;AA6BA,MAAMkB,GAAG,GAAG,EAAZ;AACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYpB,gBAAZ,CAAtB;;AA7CkE;AA8C7D,QAAMqB,GAAG,qBAAT;AACD,QAAMb,MAAM,GAAGa,GAAf;;AACAJ,IAAAA,GAAG,CAACT,MAAD,CAAH,GAAc,YAAa;AAAA,wCAATC,IAAS;AAATA,QAAAA,IAAS;AAAA;;AACvBF,MAAAA,KAAK,CAACC,MAAD,EAASC,IAAT,CAAL;AACH,KAFD;AAhD8D;;AA8ClE,oCAAkBS,aAAlB,oCAAiC;AAAA;AAKhC;;AACD,SAAOD,GAAP;AACH,CArD8D,EAA/D;AAsDA,SAASxB,MAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n"]},"metadata":{},"sourceType":"module"}