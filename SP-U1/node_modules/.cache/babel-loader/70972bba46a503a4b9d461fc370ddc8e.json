{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\n\nfunction _nestedGroup(groupTitle, urls) {\n  if (urls.length === 0) {\n    return;\n  }\n\n  logger.groupCollapsed(groupTitle);\n\n  var _iterator = _createForOfIteratorHelper(urls),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var url = _step.value;\n      logger.log(url);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\n\n\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n  var precachedCount = urlsToPrecache.length;\n  var alreadyPrecachedCount = urlsAlreadyPrecached.length;\n\n  if (precachedCount || alreadyPrecachedCount) {\n    var message = \"Precaching \".concat(precachedCount, \" file\").concat(precachedCount === 1 ? '' : 's', \".\");\n\n    if (alreadyPrecachedCount > 0) {\n      message += \" \".concat(alreadyPrecachedCount, \" \") + \"file\".concat(alreadyPrecachedCount === 1 ? ' is' : 's are', \" already cached.\");\n    }\n\n    logger.groupCollapsed(message);\n\n    _nestedGroup(\"View newly precached URLs.\", urlsToPrecache);\n\n    _nestedGroup(\"View previously precached URLs.\", urlsAlreadyPrecached);\n\n    logger.groupEnd();\n  }\n}","map":{"version":3,"sources":["/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/workbox-precaching/utils/printInstallDetails.js"],"names":["logger","_nestedGroup","groupTitle","urls","length","groupCollapsed","url","log","groupEnd","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","message"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,iCAAvB;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,IAAlC,EAAwC;AACpC,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACH;;AACDJ,EAAAA,MAAM,CAACK,cAAP,CAAsBH,UAAtB;;AAJoC,6CAKlBC,IALkB;AAAA;;AAAA;AAKpC,wDAAwB;AAAA,UAAbG,GAAa;AACpBN,MAAAA,MAAM,CAACO,GAAP,CAAWD,GAAX;AACH;AAPmC;AAAA;AAAA;AAAA;AAAA;;AAQpCN,EAAAA,MAAM,CAACQ,QAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,mBAAT,CAA6BC,cAA7B,EAA6CC,oBAA7C,EAAmE;AACtE,MAAMC,cAAc,GAAGF,cAAc,CAACN,MAAtC;AACA,MAAMS,qBAAqB,GAAGF,oBAAoB,CAACP,MAAnD;;AACA,MAAIQ,cAAc,IAAIC,qBAAtB,EAA6C;AACzC,QAAIC,OAAO,wBAAiBF,cAAjB,kBAAuCA,cAAc,KAAK,CAAnB,GAAuB,EAAvB,GAA4B,GAAnE,MAAX;;AACA,QAAIC,qBAAqB,GAAG,CAA5B,EAA+B;AAC3BC,MAAAA,OAAO,IAAI,WAAID,qBAAJ,uBACAA,qBAAqB,KAAK,CAA1B,GAA8B,KAA9B,GAAsC,OADtC,qBAAX;AAEH;;AACDb,IAAAA,MAAM,CAACK,cAAP,CAAsBS,OAAtB;;AACAb,IAAAA,YAAY,+BAA+BS,cAA/B,CAAZ;;AACAT,IAAAA,YAAY,oCAAoCU,oBAApC,CAAZ;;AACAX,IAAAA,MAAM,CAACQ,QAAP;AACH;AACJ","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}