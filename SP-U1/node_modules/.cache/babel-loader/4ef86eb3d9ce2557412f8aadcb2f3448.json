{"ast":null,"code":"/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\n\nfunction createHandler() {\n  var fallbackToNetwork = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var precacheController = getOrCreatePrecacheController();\n  return precacheController.createHandler(fallbackToNetwork);\n}\n\nexport { createHandler };","map":{"version":3,"sources":["/Users/tm/Documents/CODE/ION/STUDYPELAGO/node_modules/workbox-precaching/createHandler.js"],"names":["getOrCreatePrecacheController","createHandler","fallbackToNetwork","precacheController"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,6BAAT,QAA8C,0CAA9C;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,GAAiD;AAAA,MAA1BC,iBAA0B,uEAAN,IAAM;AAC7C,MAAMC,kBAAkB,GAAGH,6BAA6B,EAAxD;AACA,SAAOG,kBAAkB,CAACF,aAAnB,CAAiCC,iBAAjC,CAAP;AACH;;AACD,SAASD,aAAT","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandler(fallbackToNetwork = true) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandler(fallbackToNetwork);\n}\nexport { createHandler };\n"]},"metadata":{},"sourceType":"module"}