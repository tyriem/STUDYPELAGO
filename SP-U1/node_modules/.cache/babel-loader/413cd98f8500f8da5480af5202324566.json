{"ast":null,"code":"import _objectSpread from\"/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/// FIREBASE STUFF\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from\"firebase/app\";// Add the Firebase services that you want to use\nimport\"firebase/auth\";import\"firebase/firestore\";import\"firebase/functions\";import\"firebase/storage\";// THIS HOLDS THE DATA\nvar data=[];export var initializeFirebase=function initializeFirebase(){//INITIALIZE FIREBASE\nvar firebaseConfig={};// Initialize Firebase\nif(firebase.apps.length===0){firebase.initializeApp({apiKey:process.env.REACT_APP_FIREBASE_CONFIG_API_KEY,projectId:process.env.REACT_APP_FIREBASE_CONFIG_PROJECT_ID,storageBucket:process.env.REACT_APP_FIREBASE_CONFIG_STORAGE_BUCKET});}};initializeFirebase();// SAVE IMAGE\n//\n// path where data is stored in firebase storage\nvar STORAGE_FILE_PATH=\"images/tutors\";// main collection name\nvar COLLECTION_NAME_TUTOR=\"tutor-listing\";// main collection name\nvar COLLECTION_NAME_COURSE=\"course-listing\";/**\n * Saves the image to the database and returns either an error or information\n * about the object that you just saved\n * \n * @param imageData - File\n * @returns \n */export var saveImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(imageData){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",new Promise(function(resolve,reject){// get a reference to our storage in the database\nvar storageRef=firebase.storage().ref();// create a unique path name for the image\n// create a unique path name for the image\nvar uniquePathName=new Date().getTime()+\"-\"+imageData.name;// get the reference that includes path in database plus the \n// unique name we used for the image we are saving\n// get the reference that includes path in database plus the \n// unique name we used for the image we are saving\nvar ref=storageRef.child(STORAGE_FILE_PATH+uniquePathName);// start the upload process, we are also including the file type \n// with the upload...\n// start the upload process, we are also including the file type \n// with the upload...\nvar uploadTask=ref.put(imageData,{contentType:imageData.type});// here we listen for specific events and take action when needed\n// error - we reject the promise and return the error we got\n// complete - we need to get the download url and then gather other pieces\n//   of data we want to return to the user, create an object and resolve\n//   the promise with the data\n// here we listen for specific events and take action when needed\n// error - we reject the promise and return the error we got\n// complete - we need to get the download url and then gather other pieces\n//   of data we want to return to the user, create an object and resolve\n//   the promise with the data\nuploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,{'next':function next(s){return null;},'error':function error(_error){console.log(_error);reject(_error);},'complete':function(){var _complete=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var downloadUrl,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('upload complete!');_context.next=3;return uploadTask.snapshot.ref.getDownloadURL();case 3:downloadUrl=_context.sent;data={//   metaData: uploadTask.snapshot.metadata,\ndownloadUrl:downloadUrl,name:uploadTask.snapshot.metadata.name,image:{ref:uploadTask.snapshot.ref.fullPath,size:uploadTask.snapshot.metadata.size,contentType:uploadTask.snapshot.metadata.contentType,timeCreated:uploadTask.snapshot.metadata.timeCreated}};resolve({data:data});case 6:case\"end\":return _context.stop();}}},_callee);}));function complete(){return _complete.apply(this,arguments);}return complete;}()});}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function saveImage(_x){return _ref.apply(this,arguments);};}();// READ DATA\n// https://firebase.google.com/docs/firestore/query-data/get-data\nexport var getTutorData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var db,results,querySnapshot;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// get firebase firestore database\ndb=firebase.firestore();results=[];// --\n// GET ALL THE DOCUMENTS\n_context3.next=4;return db.collection(COLLECTION_NAME_TUTOR).get();case 4:querySnapshot=_context3.sent;// loop through documents\nquerySnapshot.forEach(function(doc){// doc.data() is never undefined for query doc snapshots\nconsole.log(doc.id,\" => \",doc.data());results.push(_objectSpread({id:doc.id},doc.data()));});console.log(results);return _context3.abrupt(\"return\",results);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function getTutorData(){return _ref2.apply(this,arguments);};}();// READ DATA\n// https://firebase.google.com/docs/firestore/query-data/get-data\nexport var getCourseData=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var db,results,querySnapshot;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:// get firebase firestore database\ndb=firebase.firestore();results=[];// --\n// GET ALL THE DOCUMENTS\n_context4.next=4;return db.collection(COLLECTION_NAME_COURSE).get();case 4:querySnapshot=_context4.sent;// loop through ocuments\nquerySnapshot.forEach(function(doc){// doc.data() is never undefined for query doc snapshots\nconsole.log(doc.id,\" => \",doc.data());results.push(_objectSpread({id:doc.id},doc.data()));});console.log(results);return _context4.abrupt(\"return\",results);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function getCourseData(){return _ref3.apply(this,arguments);};}();/**\n * \n * @param tutorData \n * @returns \n */export var updateTutor=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(tutorData){var db,_data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:// get firebase firestore database\ndb=firebase.firestore();_context5.prev=1;_context5.next=4;return db.collection(COLLECTION_NAME_TUTOR).doc().set(tutorData);case 4:_data=_context5.sent;return _context5.abrupt(\"return\",{data:_data,error:null});case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](1);return _context5.abrupt(\"return\",{data:null,error:_context5.t0});case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[1,8]]);}));return function updateTutor(_x2){return _ref4.apply(this,arguments);};}();/**\n * \n * @param id \n */export var getDataByTutorId=function getDataByTutorId(id){// get firebase firestore database\nvar db=firebase.firestore();// get a reference to a specific document\nvar docRef=db.collection(COLLECTION_NAME_TUTOR).doc(id);return docRef.get().then(function(doc){if(doc.exists){console.log(\"Document data:\",doc.data());return _objectSpread({id:doc.id},doc.data());}else{// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");}}).catch(function(error){console.log(\"Error getting document:\",error);});};/**\n * \n * @param courseData \n * @returns \n */export var updateCourse=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(courseData){var db,_data2;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:// get firebase firestore database\ndb=firebase.firestore();_context6.prev=1;_context6.next=4;return db.collection(COLLECTION_NAME_COURSE).doc().set(courseData);case 4:_data2=_context6.sent;return _context6.abrupt(\"return\",{data:_data2,error:null});case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](1);return _context6.abrupt(\"return\",{data:null,error:_context6.t0});case 11:case\"end\":return _context6.stop();}}},_callee6,null,[[1,8]]);}));return function updateCourse(_x3){return _ref5.apply(this,arguments);};}();/**\n * \n * @param id \n */export var getDataByCourseId=function getDataByCourseId(id){// get firebase firestore database\nvar db=firebase.firestore();// get a reference to a specific document\nvar docRef=db.collection(COLLECTION_NAME_COURSE).doc(id);return docRef.get().then(function(doc){if(doc.exists){console.log(\"Document data: \",doc.data());return _objectSpread({id:doc.id},doc.data());}else{// doc.data() will be undefined in this case\nconsole.log(\"No such document!\");}}).catch(function(error){console.log(\"Error getting document: \",error);});};export var firebaseAuth=firebase.auth();export var firebaseApp=firebase;export var firebaseStorage=firebase.storage;","map":{"version":3,"sources":["/Users/tm/Documents/CODE/STUDYPELAGO/src/data/data-services.ts"],"names":["firebase","data","initializeFirebase","firebaseConfig","apps","length","initializeApp","apiKey","process","env","REACT_APP_FIREBASE_CONFIG_API_KEY","projectId","REACT_APP_FIREBASE_CONFIG_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_CONFIG_STORAGE_BUCKET","STORAGE_FILE_PATH","COLLECTION_NAME_TUTOR","COLLECTION_NAME_COURSE","saveImage","imageData","Promise","resolve","reject","storageRef","storage","ref","uniquePathName","Date","getTime","name","child","uploadTask","put","contentType","type","on","TaskEvent","STATE_CHANGED","s","error","console","log","snapshot","getDownloadURL","downloadUrl","metadata","image","fullPath","size","timeCreated","getTutorData","db","firestore","results","collection","get","querySnapshot","forEach","doc","id","push","getCourseData","updateTutor","tutorData","set","getDataByTutorId","docRef","then","exists","catch","updateCourse","courseData","getDataByCourseId","firebaseAuth","auth","firebaseApp","firebaseStorage"],"mappings":"6cACA;AACA;AACA;AACA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CAEA;AACA,MAAO,eAAP,CACA,MAAO,oBAAP,CACA,MAAO,oBAAP,CACA,MAAO,kBAAP,CAEA;AACA,GAAMC,CAAAA,IAAI,CAAG,EAAb,CAGA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAEtC;AACA,GAAIC,CAAAA,cAAc,CAAG,EAArB,CAGA;AACA,GAAIH,QAAQ,CAACI,IAAT,CAAcC,MAAd,GAAyB,CAA7B,CAAgC,CAC9BL,QAAQ,CAACM,aAAT,CAAuB,CACvBC,MAAM,CAAEC,OAAO,CAACC,GAAR,CAAYC,iCADG,CAEvBC,SAAS,CAAEH,OAAO,CAACC,GAAR,CAAYG,oCAFA,CAGvBC,aAAa,CAAEL,OAAO,CAACC,GAAR,CAAYK,wCAHJ,CAAvB,EAKD,CACF,CAdM,CAePZ,kBAAkB,GAGlB;AACA;AAEA;AACA,GAAMa,CAAAA,iBAAiB,CAAG,eAA1B,CAEA;AACA,GAAMC,CAAAA,qBAAqB,CAAG,eAA9B,CAEA;AACA,GAAMC,CAAAA,sBAAsB,CAAG,gBAA/B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,kBAAOC,SAAP,uJAKhB,GAAIC,CAAAA,OAAJ,CAAiB,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAE3C;AACA,GAAMC,CAAAA,UAAU,CAAGvB,QAAQ,CAACwB,OAAT,GAAmBC,GAAnB,EAAnB,CAEA;AAAA;AACA,GAAIC,CAAAA,cAAc,CAChB,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,GACA,GADA,CAEAT,SAAS,CAACU,IAHZ,CAKA;AACA;AADA;AACA;AACA,GAAIJ,CAAAA,GAAG,CAAGF,UAAU,CAACO,KAAX,CAAiBf,iBAAiB,CAAGW,cAArC,CAAV,CAEA;AACA;AADA;AACA;AACA,GAAIK,CAAAA,UAAU,CAAGN,GAAG,CAACO,GAAJ,CAAQb,SAAR,CAAmB,CAClCc,WAAW,CAAEd,SAAS,CAACe,IADW,CAAnB,CAAjB,CAIA;AACA;AACA;AACA;AACA;AAJA;AACA;AACA;AACA;AACA;AACAH,UAAU,CAACI,EAAX,CAAcnC,QAAQ,CAACwB,OAAT,CAAiBY,SAAjB,CAA2BC,aAAzC,CAAwD,CACtD,OAAQ,cAACC,CAAD,QAAO,KAAP,EAD8C,CAEtD,QAAS,eAACC,MAAD,CAAW,CAClBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAjB,MAAM,CAACiB,MAAD,CAAN,CACD,CALqD,CAMtD,4FAAY,wJACVC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADU,sBAGcV,CAAAA,UAAU,CAACW,QAAX,CAAoBjB,GAApB,CAAwBkB,cAAxB,EAHd,QAGNC,WAHM,eAIN3C,IAJM,CAIC,CACT;AACA2C,WAAW,CAAXA,WAFS,CAGTf,IAAI,CAAEE,UAAU,CAACW,QAAX,CAAoBG,QAApB,CAA6BhB,IAH1B,CAITiB,KAAK,CAAE,CACLrB,GAAG,CAAEM,UAAU,CAACW,QAAX,CAAoBjB,GAApB,CAAwBsB,QADxB,CAELC,IAAI,CAAEjB,UAAU,CAACW,QAAX,CAAoBG,QAApB,CAA6BG,IAF9B,CAGLf,WAAW,CAAEF,UAAU,CAACW,QAAX,CAAoBG,QAApB,CAA6BZ,WAHrC,CAILgB,WAAW,CAAElB,UAAU,CAACW,QAAX,CAAoBG,QAApB,CAA6BI,WAJrC,CAJE,CAJD,CAeV5B,OAAO,CAAC,CAAEpB,IAAI,CAAJA,IAAF,CAAD,CAAP,CAfU,sDAAZ,kFANsD,CAAxD,EAwBD,CAlDM,CALgB,0DAAH,kBAATiB,CAAAA,SAAS,4CAAf,CA4DP;AACA;AACA,MAAO,IAAMgC,CAAAA,YAAY,2FAAG,qKAG1B;AACMC,EAJoB,CAIfnD,QAAQ,CAACoD,SAAT,EAJe,CAMpBC,OANoB,CAML,EANK,CAO1B;AACA;AAR0B,uBASEF,CAAAA,EAAE,CAACG,UAAH,CAActC,qBAAd,EAAqCuC,GAArC,EATF,QASpBC,aAToB,gBAW1B;AACAA,aAAa,CAACC,OAAd,CAAsB,SAACC,GAAD,CAAS,CAC7B;AACAlB,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACC,EAAhB,CAAoB,MAApB,CAA4BD,GAAG,CAACzD,IAAJ,EAA5B,EACAoD,OAAO,CAACO,IAAR,gBACED,EAAE,CAAED,GAAG,CAACC,EADV,EAEKD,GAAG,CAACzD,IAAJ,EAFL,GAID,CAPD,EAQAuC,OAAO,CAACC,GAAR,CAAYY,OAAZ,EApB0B,iCAqBnBA,OArBmB,0DAAH,kBAAZH,CAAAA,YAAY,2CAAlB,CAyBP;AACA;AACA,MAAO,IAAMW,CAAAA,aAAa,2FAAG,qKAG3B;AACMV,EAJqB,CAIhBnD,QAAQ,CAACoD,SAAT,EAJgB,CAMrBC,OANqB,CAMN,EANM,CAO3B;AACA;AAR2B,uBASCF,CAAAA,EAAE,CAACG,UAAH,CAAcrC,sBAAd,EAAsCsC,GAAtC,EATD,QASrBC,aATqB,gBAW3B;AACAA,aAAa,CAACC,OAAd,CAAsB,SAACC,GAAD,CAAS,CAC7B;AACAlB,OAAO,CAACC,GAAR,CAAYiB,GAAG,CAACC,EAAhB,CAAoB,MAApB,CAA4BD,GAAG,CAACzD,IAAJ,EAA5B,EACAoD,OAAO,CAACO,IAAR,gBACED,EAAE,CAAED,GAAG,CAACC,EADV,EAEKD,GAAG,CAACzD,IAAJ,EAFL,GAID,CAPD,EAQAuC,OAAO,CAACC,GAAR,CAAYY,OAAZ,EApB2B,iCAqBpBA,OArBoB,0DAAH,kBAAbQ,CAAAA,aAAa,2CAAnB,CAyBP;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,WAAW,2FAAG,kBAAOC,SAAP,mIACzB;AACMZ,EAFmB,CAEdnD,QAAQ,CAACoD,SAAT,EAFc,yCAKJD,CAAAA,EAAE,CAACG,UAAH,CAActC,qBAAd,EAAqC0C,GAArC,GAA2CM,GAA3C,CAA+CD,SAA/C,CALI,QAKjB9D,KALiB,iDAMhB,CACLA,IAAI,CAAJA,KADK,CAELsC,KAAK,CAAE,IAFF,CANgB,8FAWhB,CAAEtC,IAAI,CAAE,IAAR,CAAcsC,KAAK,aAAnB,CAXgB,wEAAH,kBAAXuB,CAAAA,WAAW,8CAAjB,CAcP;AACA;AACA;AACA,GACA,MAAO,IAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACN,EAAD,CAAgB,CAE9C;AACA,GAAMR,CAAAA,EAAE,CAAGnD,QAAQ,CAACoD,SAAT,EAAX,CAEA;AACA,GAAMc,CAAAA,MAAM,CAAGf,EAAE,CAACG,UAAH,CAActC,qBAAd,EAAqC0C,GAArC,CAAyCC,EAAzC,CAAf,CACA,MAAOO,CAAAA,MAAM,CACVX,GADI,GAEJY,IAFI,CAEC,SAACT,GAAD,CAAS,CACb,GAAIA,GAAG,CAACU,MAAR,CAAgB,CACd5B,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BiB,GAAG,CAACzD,IAAJ,EAA9B,EACA,sBACE0D,EAAE,CAAED,GAAG,CAACC,EADV,EAEKD,GAAG,CAACzD,IAAJ,EAFL,EAID,CAND,IAMO,CACL;AACAuC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACD,CACF,CAbI,EAcJ4B,KAdI,CAcE,SAAC9B,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCF,KAAvC,EACD,CAhBI,CAAP,CAmBD,CA1BM,CA4BP;AACA;AACA;AACA;AACA,GACC,MAAO,IAAM+B,CAAAA,YAAY,2FAAG,kBAAOC,UAAP,oIAC3B;AACMpB,EAFqB,CAEhBnD,QAAQ,CAACoD,SAAT,EAFgB,yCAKND,CAAAA,EAAE,CAACG,UAAH,CAAcrC,sBAAd,EAAsCyC,GAAtC,GAA4CM,GAA5C,CAAgDO,UAAhD,CALM,QAKnBtE,MALmB,iDAMlB,CACLA,IAAI,CAAJA,MADK,CAELsC,KAAK,CAAE,IAFF,CANkB,8FAWlB,CAAEtC,IAAI,CAAE,IAAR,CAAcsC,KAAK,aAAnB,CAXkB,wEAAH,kBAAZ+B,CAAAA,YAAY,8CAAlB,CAcR;AACA;AACA;AACA,GACA,MAAO,IAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACb,EAAD,CAAgB,CAE/C;AACA,GAAMR,CAAAA,EAAE,CAAGnD,QAAQ,CAACoD,SAAT,EAAX,CAEA;AACA,GAAMc,CAAAA,MAAM,CAAGf,EAAE,CAACG,UAAH,CAAcrC,sBAAd,EAAsCyC,GAAtC,CAA0CC,EAA1C,CAAf,CACA,MAAOO,CAAAA,MAAM,CACVX,GADI,GAEJY,IAFI,CAEC,SAACT,GAAD,CAAS,CACb,GAAIA,GAAG,CAACU,MAAR,CAAgB,CACd5B,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BiB,GAAG,CAACzD,IAAJ,EAA/B,EACA,sBACE0D,EAAE,CAAED,GAAG,CAACC,EADV,EAEKD,GAAG,CAACzD,IAAJ,EAFL,EAID,CAND,IAMO,CACL;AACAuC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACD,CACF,CAbI,EAcJ4B,KAdI,CAcE,SAAC9B,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCF,KAAxC,EACD,CAhBI,CAAP,CAmBD,CA1BM,CA6BP,MAAO,IAAMkC,CAAAA,YAAY,CAAGzE,QAAQ,CAAC0E,IAAT,EAArB,CACP,MAAO,IAAMC,CAAAA,WAAW,CAAG3E,QAApB,CACP,MAAO,IAAM4E,CAAAA,eAAe,CAAG5E,QAAQ,CAACwB,OAAjC","sourcesContent":["\n/// FIREBASE STUFF\n// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\n\n// THIS HOLDS THE DATA\nconst data = [];\n\n\nexport const initializeFirebase = () => {\n\n  //INITIALIZE FIREBASE\n  var firebaseConfig = {\n\n  };\n  // Initialize Firebase\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_CONFIG_API_KEY,\n    projectId: process.env.REACT_APP_FIREBASE_CONFIG_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_CONFIG_STORAGE_BUCKET,\n  });\n  }\n}\ninitializeFirebase();\n\n\n// SAVE IMAGE\n//\n\n// path where data is stored in firebase storage\nconst STORAGE_FILE_PATH = \"images/tutors\";\n\n// main collection name\nconst COLLECTION_NAME_TUTOR = \"tutor-listing\";\n\n// main collection name\nconst COLLECTION_NAME_COURSE = \"course-listing\";\n\n/**\n * Saves the image to the database and returns either an error or information\n * about the object that you just saved\n * \n * @param imageData - File\n * @returns \n */\nexport const saveImage = async (imageData: any) => {\n\n  // we need the function to be async so we wrap the whole thing in a \n  // promise. We return result using the resolve parameter and an error\n  // using the reject parameter\n  return new Promise<any>((resolve, reject) => {\n\n    // get a reference to our storage in the database\n    const storageRef = firebase.storage().ref();\n\n    // create a unique path name for the image\n    let uniquePathName =\n      new Date().getTime() +\n      \"-\" +\n      imageData.name;\n\n    // get the reference that includes path in database plus the \n    // unique name we used for the image we are saving\n    let ref = storageRef.child(STORAGE_FILE_PATH + uniquePathName);\n\n    // start the upload process, we are also including the file type \n    // with the upload...\n    let uploadTask = ref.put(imageData, {\n      contentType: imageData.type\n    });\n\n    // here we listen for specific events and take action when needed\n    // error - we reject the promise and return the error we got\n    // complete - we need to get the download url and then gather other pieces\n    //   of data we want to return to the user, create an object and resolve\n    //   the promise with the data\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, {\n      'next': (s) => null,\n      'error': (error) => {\n        console.log(error);\n        reject(error);\n      },\n      'complete': async () => {\n        console.log('upload complete!');\n\n        let downloadUrl = await uploadTask.snapshot.ref.getDownloadURL();\n        let data = {\n          //   metaData: uploadTask.snapshot.metadata,\n          downloadUrl,\n          name: uploadTask.snapshot.metadata.name,\n          image: {\n            ref: uploadTask.snapshot.ref.fullPath,\n            size: uploadTask.snapshot.metadata.size,\n            contentType: uploadTask.snapshot.metadata.contentType,\n            timeCreated: uploadTask.snapshot.metadata.timeCreated\n          }\n        };\n        resolve({ data });\n      }\n    });\n  });\n\n}\n\n\n// READ DATA\n// https://firebase.google.com/docs/firestore/query-data/get-data\nexport const getTutorData = async () => {\n\n\n  // get firebase firestore database\n  const db = firebase.firestore();\n\n  const results: any = [];\n  // --\n  // GET ALL THE DOCUMENTS\n  const querySnapshot = await db.collection(COLLECTION_NAME_TUTOR).get();\n\n  // loop through documents\n  querySnapshot.forEach((doc) => {\n    // doc.data() is never undefined for query doc snapshots\n    console.log(doc.id, \" => \", doc.data());\n    results.push({\n      id: doc.id,\n      ...doc.data(), // <- JAVASCRIPT DESTRUCTURING\n    })\n  });\n  console.log(results);\n  return results;\n};\n\n\n// READ DATA\n// https://firebase.google.com/docs/firestore/query-data/get-data\nexport const getCourseData = async () => {\n\n\n  // get firebase firestore database\n  const db = firebase.firestore();\n\n  const results: any = [];\n  // --\n  // GET ALL THE DOCUMENTS\n  const querySnapshot = await db.collection(COLLECTION_NAME_COURSE).get();\n\n  // loop through ocuments\n  querySnapshot.forEach((doc) => {\n    // doc.data() is never undefined for query doc snapshots\n    console.log(doc.id, \" => \", doc.data());\n    results.push({\n      id: doc.id,\n      ...doc.data(), // <- JAVASCRIPT DESTRUCTURING\n    })\n  });\n  console.log(results);\n  return results;\n};\n\n\n/**\n * \n * @param tutorData \n * @returns \n */\nexport const updateTutor = async (tutorData: any) => {\n  // get firebase firestore database\n  const db = firebase.firestore();\n\n  try {\n    const data = await db.collection(COLLECTION_NAME_TUTOR).doc().set(tutorData)\n    return {\n      data,\n      error: null\n    }\n  } catch (error) {\n    return { data: null, error }\n  }\n}\n/**\n * \n * @param id \n */\nexport const getDataByTutorId = (id: string) => {\n\n  // get firebase firestore database\n  const db = firebase.firestore();\n\n  // get a reference to a specific document\n  const docRef = db.collection(COLLECTION_NAME_TUTOR).doc(id);\n  return docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error getting document:\", error);\n    });\n\n\n}\n\n/**\n * \n * @param courseData \n * @returns \n */\n export const updateCourse = async (courseData: any) => {\n  // get firebase firestore database\n  const db = firebase.firestore();\n\n  try {\n    const data = await db.collection(COLLECTION_NAME_COURSE).doc().set(courseData)\n    return {\n      data,\n      error: null\n    }\n  } catch (error) {\n    return { data: null, error }\n  }\n}\n/**\n * \n * @param id \n */\nexport const getDataByCourseId = (id: string) => {\n\n  // get firebase firestore database\n  const db = firebase.firestore();\n\n  // get a reference to a specific document\n  const docRef = db.collection(COLLECTION_NAME_COURSE).doc(id);\n  return docRef\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        console.log(\"Document data: \", doc.data());\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error getting document: \", error);\n    });\n\n\n}\n\n\nexport const firebaseAuth = firebase.auth();\nexport const firebaseApp = firebase;\nexport const firebaseStorage = firebase.storage;\n"]},"metadata":{},"sourceType":"module"}