{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(generateURLVariations);\n\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\n\nexport function generateURLVariations(url) {\n  var _ref,\n      ignoreURLParametersMatching,\n      directoryIndex,\n      cleanURLs,\n      urlManipulation,\n      urlObject,\n      urlWithoutIgnoredParams,\n      directoryURL,\n      cleanURL,\n      additionalURLs,\n      _iterator,\n      _step,\n      urlToAttempt,\n      _args = arguments;\n\n  return _regeneratorRuntime.wrap(function generateURLVariations$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, ignoreURLParametersMatching = _ref.ignoreURLParametersMatching, directoryIndex = _ref.directoryIndex, cleanURLs = _ref.cleanURLs, urlManipulation = _ref.urlManipulation;\n          urlObject = new URL(url, location.href);\n          urlObject.hash = '';\n          _context.next = 5;\n          return urlObject.href;\n\n        case 5:\n          urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n          _context.next = 8;\n          return urlWithoutIgnoredParams.href;\n\n        case 8:\n          if (!(directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/'))) {\n            _context.next = 13;\n            break;\n          }\n\n          directoryURL = new URL(urlWithoutIgnoredParams.href);\n          directoryURL.pathname += directoryIndex;\n          _context.next = 13;\n          return directoryURL.href;\n\n        case 13:\n          if (!cleanURLs) {\n            _context.next = 18;\n            break;\n          }\n\n          cleanURL = new URL(urlWithoutIgnoredParams.href);\n          cleanURL.pathname += '.html';\n          _context.next = 18;\n          return cleanURL.href;\n\n        case 18:\n          if (!urlManipulation) {\n            _context.next = 37;\n            break;\n          }\n\n          additionalURLs = urlManipulation({\n            url: urlObject\n          });\n          _iterator = _createForOfIteratorHelper(additionalURLs);\n          _context.prev = 21;\n\n          _iterator.s();\n\n        case 23:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 29;\n            break;\n          }\n\n          urlToAttempt = _step.value;\n          _context.next = 27;\n          return urlToAttempt.href;\n\n        case 27:\n          _context.next = 23;\n          break;\n\n        case 29:\n          _context.next = 34;\n          break;\n\n        case 31:\n          _context.prev = 31;\n          _context.t0 = _context[\"catch\"](21);\n\n          _iterator.e(_context.t0);\n\n        case 34:\n          _context.prev = 34;\n\n          _iterator.f();\n\n          return _context.finish(34);\n\n        case 37:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[21, 31, 34, 37]]);\n}","map":{"version":3,"sources":["/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/workbox-precaching/utils/generateURLVariations.js"],"names":["generateURLVariations","removeIgnoredSearchParams","url","ignoreURLParametersMatching","directoryIndex","cleanURLs","urlManipulation","urlObject","URL","location","href","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt"],"mappings":";;;oDAmBiBA,qB;;AAnBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAUD,qBAAV,CAAgCE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yEAAoH,EAApH,EAAuCC,2BAAvC,QAAuCA,2BAAvC,EAAoEC,cAApE,QAAoEA,cAApE,EAAoFC,SAApF,QAAoFA,SAApF,EAA+FC,eAA/F,QAA+FA,eAA/F;AACGC,UAAAA,SADH,GACe,IAAIC,GAAJ,CAAQN,GAAR,EAAaO,QAAQ,CAACC,IAAtB,CADf;AAEHH,UAAAA,SAAS,CAACI,IAAV,GAAiB,EAAjB;AAFG;AAGH,iBAAMJ,SAAS,CAACG,IAAhB;;AAHG;AAIGE,UAAAA,uBAJH,GAI6BX,yBAAyB,CAACM,SAAD,EAAYJ,2BAAZ,CAJtD;AAAA;AAKH,iBAAMS,uBAAuB,CAACF,IAA9B;;AALG;AAAA,gBAMCN,cAAc,IAAIQ,uBAAuB,CAACC,QAAxB,CAAiCC,QAAjC,CAA0C,GAA1C,CANnB;AAAA;AAAA;AAAA;;AAOOC,UAAAA,YAPP,GAOsB,IAAIP,GAAJ,CAAQI,uBAAuB,CAACF,IAAhC,CAPtB;AAQCK,UAAAA,YAAY,CAACF,QAAb,IAAyBT,cAAzB;AARD;AASC,iBAAMW,YAAY,CAACL,IAAnB;;AATD;AAAA,eAWCL,SAXD;AAAA;AAAA;AAAA;;AAYOW,UAAAA,QAZP,GAYkB,IAAIR,GAAJ,CAAQI,uBAAuB,CAACF,IAAhC,CAZlB;AAaCM,UAAAA,QAAQ,CAACH,QAAT,IAAqB,OAArB;AAbD;AAcC,iBAAMG,QAAQ,CAACN,IAAf;;AAdD;AAAA,eAgBCJ,eAhBD;AAAA;AAAA;AAAA;;AAiBOW,UAAAA,cAjBP,GAiBwBX,eAAe,CAAC;AAAEJ,YAAAA,GAAG,EAAEK;AAAP,WAAD,CAjBvC;AAAA,iDAkB4BU,cAlB5B;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBYC,UAAAA,YAlBZ;AAAA;AAmBK,iBAAMA,YAAY,CAACR,IAAnB;;AAnBL;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}