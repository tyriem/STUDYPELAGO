{"ast":null,"code":"/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nvar _cacheNameDetails = {\n  googleAnalytics: 'googleAnalytics',\n  precache: 'precache-v2',\n  prefix: 'workbox',\n  runtime: 'runtime',\n  suffix: typeof registration !== 'undefined' ? registration.scope : ''\n};\n\nvar _createCacheName = function _createCacheName(cacheName) {\n  return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix].filter(function (value) {\n    return value && value.length > 0;\n  }).join('-');\n};\n\nvar eachCacheNameDetail = function eachCacheNameDetail(fn) {\n  for (var _i = 0, _Object$keys = Object.keys(_cacheNameDetails); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    fn(key);\n  }\n};\n\nexport var cacheNames = {\n  updateDetails: function updateDetails(details) {\n    eachCacheNameDetail(function (key) {\n      if (typeof details[key] === 'string') {\n        _cacheNameDetails[key] = details[key];\n      }\n    });\n  },\n  getGoogleAnalyticsName: function getGoogleAnalyticsName(userCacheName) {\n    return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n  },\n  getPrecacheName: function getPrecacheName(userCacheName) {\n    return userCacheName || _createCacheName(_cacheNameDetails.precache);\n  },\n  getPrefix: function getPrefix() {\n    return _cacheNameDetails.prefix;\n  },\n  getRuntimeName: function getRuntimeName(userCacheName) {\n    return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n  },\n  getSuffix: function getSuffix() {\n    return _cacheNameDetails.suffix;\n  }\n};","map":{"version":3,"sources":["/Users/tm/Documents/CODE/STUDYPELAGO/node_modules/workbox-core/_private/cacheNames.js"],"names":["_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","value","length","join","eachCacheNameDetail","fn","Object","keys","key","cacheNames","updateDetails","details","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,IAAMA,iBAAiB,GAAG;AACtBC,EAAAA,eAAe,EAAE,iBADK;AAEtBC,EAAAA,QAAQ,EAAE,aAFY;AAGtBC,EAAAA,MAAM,EAAE,SAHc;AAItBC,EAAAA,OAAO,EAAE,SAJa;AAKtBC,EAAAA,MAAM,EAAE,OAAOC,YAAP,KAAwB,WAAxB,GAAsCA,YAAY,CAACC,KAAnD,GAA2D;AAL7C,CAA1B;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAe;AACpC,SAAO,CAACT,iBAAiB,CAACG,MAAnB,EAA2BM,SAA3B,EAAsCT,iBAAiB,CAACK,MAAxD,EACFK,MADE,CACK,UAACC,KAAD;AAAA,WAAWA,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CAAnC;AAAA,GADL,EAEFC,IAFE,CAEG,GAFH,CAAP;AAGH,CAJD;;AAKA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAAQ;AAChC,kCAAkBC,MAAM,CAACC,IAAP,CAAYjB,iBAAZ,CAAlB,kCAAkD;AAA7C,QAAMkB,GAAG,mBAAT;AACDH,IAAAA,EAAE,CAACG,GAAD,CAAF;AACH;AACJ,CAJD;;AAKA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AACxBP,IAAAA,mBAAmB,CAAC,UAACI,GAAD,EAAS;AACzB,UAAI,OAAOG,OAAO,CAACH,GAAD,CAAd,KAAwB,QAA5B,EAAsC;AAClClB,QAAAA,iBAAiB,CAACkB,GAAD,CAAjB,GAAyBG,OAAO,CAACH,GAAD,CAAhC;AACH;AACJ,KAJkB,CAAnB;AAKH,GAPqB;AAQtBI,EAAAA,sBAAsB,EAAE,gCAACC,aAAD,EAAmB;AACvC,WAAOA,aAAa,IAAIf,gBAAgB,CAACR,iBAAiB,CAACC,eAAnB,CAAxC;AACH,GAVqB;AAWtBuB,EAAAA,eAAe,EAAE,yBAACD,aAAD,EAAmB;AAChC,WAAOA,aAAa,IAAIf,gBAAgB,CAACR,iBAAiB,CAACE,QAAnB,CAAxC;AACH,GAbqB;AActBuB,EAAAA,SAAS,EAAE,qBAAM;AACb,WAAOzB,iBAAiB,CAACG,MAAzB;AACH,GAhBqB;AAiBtBuB,EAAAA,cAAc,EAAE,wBAACH,aAAD,EAAmB;AAC/B,WAAOA,aAAa,IAAIf,gBAAgB,CAACR,iBAAiB,CAACI,OAAnB,CAAxC;AACH,GAnBqB;AAoBtBuB,EAAAA,SAAS,EAAE,qBAAM;AACb,WAAO3B,iBAAiB,CAACK,MAAzB;AACH;AAtBqB,CAAnB","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n"]},"metadata":{},"sourceType":"module"}